worker_processes auto;
rtmp_auto_push on;
rtmp_auto_push_reconnect 1s;
events {
}
rtmp {
    server {
        listen 1935;
        listen [::]:1935 ipv6only=on;
        chunk_size 4096;
        timeout 40s;
        ping 40s;
        ping_timeout 20s;
        notify_method get;

        # ivs application: split streams and transcode
        application ivs {
            live on;
            session_relay on;
            drop_idle_publisher 10s;
            idle_streams off;
            
            # ivs: push stream into stunnel (port 19351) and forward to Amazon IVS
            ## TODO: pls config IVS stream key
            push rtmp://127.0.0.1:19351/app/sk_ap-northeast-1_xxxxxxxx;

            # flv: trancode rtmp into 810p/540p and output as flv into transcode application
            exec_push /usr/local/nginx/sbin/ffmpeg -i rtmp://127.0.0.1:1935/ivs/$name
                     -vcodec libx264 -vprofile baseline -preset ultrafast -tune zerolatency -r 25 -s 1440x810 -b:v 1000K -acodec aac -ar 44100 -b:a 128k -f flv rtmp://127.0.0.1:1935/transcode/$name_810p 
                     -vcodec libx264 -vprofile baseline -preset ultrafast -tune zerolatency -r 25 -s 960x540 -b:v 500K -acodec aac -ar 44100 -b:a 128k -f flv rtmp://127.0.0.1:1935/transcode/$name_540p;
        }

        # transcode application: stream flv out
        application transcode {
           live on;
           session_relay on;
           drop_idle_publisher 10s;
           idle_streams off;
        }
    }
}

http {
    server {
        listen 80;

        location /control {
            rtmp_control all;
        }

        # /live for flv live streaming. eg: /live?port=1935&app=transcode&stream=123456_540p
        location /live {
            flv_live on;
        }

        # /www for flv player demo
        location /www {
            add_header Access-Control-Allow-Origin *;
            alias /usr/local/nginx/www/;
        }
    }
}